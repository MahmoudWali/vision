<?xml version="1.0" encoding="UTF-8"?>
<hdevelop file_version="1.2" halcon_version="23.05.0.0">
<procedure name="create_metrology_from_dxf">
<interface>
<oo>
<par name="ModelContour" base_type="iconic" dimension="0"/>
<par name="MeasureContour" base_type="iconic" dimension="0"/>
<par name="ImageTemplate" base_type="iconic" dimension="0"/>
</oo>
<ic>
<par name="DxfPath" base_type="ctrl" dimension="0"/>
<par name="CameraParam" base_type="ctrl" dimension="0"/>
<par name="MeasurementPlane" base_type="ctrl" dimension="0"/>
<par name="Scale" base_type="ctrl" dimension="0"/>
</ic>
<oc>
<par name="MetrologyHandle" base_type="ctrl" dimension="0"/>
</oc>
</interface>
<body>
<c>* Create the template image from the DXF file.</c>
<l>dxf2image (ImageTemplate, DxfPath, '', Scale)</l>
<c></c>
<c>* Get image info</c>
<l>get_image_size (ImageTemplate, Width, Height)</l>
<c></c>
<c>* Adjust the pose of the measurement plane</c>
<c>* for the height of the part and the height of the calibration plate.</c>
<c>* </c>
<c>* Thickness of the calibration plate. --&gt; ToDo: ADJUST THIS</c>
<l>CalibPlateThickness := 0.006</l>
<c>* Thickness of the object to be measured. --&gt; ToDo: ADJUST THIS</c>
<l>PartHeight := 0.005 </l>
<l>AdjustThickness := CalibPlateThickness - PartHeight</l>
<l>set_origin_pose (MeasurementPlane, 0, 0, AdjustThickness, MeasurementPlaneAdjusted)</l>
<c>* </c>
<c>* Create the metrology model and prepare it for</c>
<c>* calibrated measurements.</c>
<l>create_metrology_model (MetrologyHandle)</l>
<c>* Set the image size in advance to speed up the</c>
<c>* first call of apply_metrology_model.</c>
<l>set_metrology_model_image_size (MetrologyHandle, Width, Height)</l>
<c>* Set the camera parameters.</c>
<l>* set_metrology_model_param (MetrologyHandle, 'camera_param', CameraParam)</l>
<c>* Set the plane in which the measured object lies.</c>
<l>* set_metrology_model_param (MetrologyHandle, 'plane_pose', MeasurementPlaneAdjusted)</l>
<c></c>
<c>* </c>
<c>* Add the objects to be measured to the metrology model.</c>
<l>binary_threshold (ImageTemplate, Region, 'max_separability', 'light', UsedThreshold)</l>
<l>closing_rectangle1 (Region, RegionClosing, 3.5, 3.5)</l>
<l>boundary (RegionClosing, RegionBorder, 'inner')</l>
<l>clip_region_rel (RegionBorder, RegionClipped, 3, 3, 3, 3)</l>
<l>dilation_rectangle1 (RegionClipped, RegionDilation, 5.5, 5.5)</l>
<l>reduce_domain (ImageTemplate, RegionDilation, ImageReduced)</l>
<c></c>
<c>* Create contours</c>
<l>edges_sub_pix (ImageReduced, Edges, 'lanser2', 0.5, 10, 30)</l>
<l>sort_contours_xld (Edges, EdgesSorted, 'character', 'true', 'column')</l>
<c></c>
<c>* Segment contours</c>
<l>* segment_contours_xld (Edges, ContoursSplit, 'lines_circles', 6, 4, 4)</l>
<c></c>
<c>* Segment contours by shape and add them to the metrology model</c>
<l>gen_empty_obj (MeasCircles)</l>
<l>RowCenterCircle := []</l>
<l>ColCenterCircle := []</l>
<l>RadiusCircle    := []</l>
<c></c>
<l>gen_empty_obj (MeasRectangles)</l>
<l>RowCenterRect := []</l>
<l>ColCenterRect := []</l>
<l>PhiRect       := []</l>
<l>Length1Rect   := []</l>
<l>Length2Rect   := []</l>
<c></c>
<l>MeasureL1     := 30</l>
<l>MeasureL2     := 3</l>
<l>MeasureSigma  := 1</l>
<l>MeasureThresh := 25</l>
<c></c>
<l>count_obj (EdgesSorted, NumEdges)</l>
<l>for i:=1 to NumEdges by 1</l>
<l>    select_obj (EdgesSorted, SingleEdge, i)</l>
<l>    circularity_xld (SingleEdge, Circularity)</l>
<l>    rectangularity_xld (SingleEdge, Rectangularity)</l>
<l>    if(Circularity &gt; Rectangularity)</l>
<c>        * Circle</c>
<l>        fit_circle_contour_xld (SingleEdge, 'atukey', -1, 2, 0, 5, 2, Row, Col, Radius, StartPhi, EndPhi, PointOrder)</l>
<l>        gen_circle_contour_xld (Circle, Row, Col, Radius, 0, rad(360), 'positive', 1)        </l>
<l>        concat_obj (MeasCircles, Circle, MeasCircles)</l>
<l>        RowCenterCircle := [RowCenterCircle, Row]</l>
<l>        ColCenterCircle := [ColCenterCircle, Col]</l>
<l>        RadiusCircle    := [RadiusCircle, Radius]</l>
<c>        </c>
<l>        CircleParam := [Row, Col, Radius]</l>
<l>        add_metrology_object_generic (MetrologyHandle, 'circle', CircleParam, MeasureL1, MeasureL2, MeasureSigma, MeasureThresh, [], [], CircleIndices)</l>
<l>    else</l>
<c>        * Rectangle</c>
<l>        fit_rectangle2_contour_xld (SingleEdge, 'tukey', -1, 0, 0, 3, 2, Row, Col, Phi, L1, L2, PointOrder)</l>
<l>        gen_rectangle2_contour_xld (Rectangle, Row, Col, Phi, L1, L2)</l>
<l>        concat_obj (MeasRectangles, Rectangle, MeasRectangles)</l>
<l>        RowCenterRect := [RowCenterRect, Row]</l>
<l>        ColCenterRect := [ColCenterRect, Col]</l>
<l>        PhiRect       := [PhiRect, Phi]</l>
<l>        Length1Rect   := [Length1Rect, L1]</l>
<l>        Length2Rect   := [Length2Rect, L2]</l>
<c>        </c>
<l>        RectangleParam := [Row, Col, Phi, L1, L2]</l>
<l>        add_metrology_object_generic (MetrologyHandle, 'rectangle2', RectangleParam, MeasureL1, MeasureL2, MeasureSigma, MeasureThresh, [], [], RectIndices)</l>
<l>    endif</l>
<l>endfor</l>
<c></c>
<c></c>
<c>* Add start_X, end_X, start_Y, end_Y to the last 4 positions of the Metrology Model</c>
<c>* start_X</c>
<l>add_metrology_object_line_measure (MetrologyHandle, 0, 0, Height-1, 0, 20, 5, MeasureSigma, MeasureThresh, [], [], Index)</l>
<c>* end_X</c>
<l>add_metrology_object_line_measure (MetrologyHandle, 0, Width-1, Height-1, Width-1, 20, 5, MeasureSigma, MeasureThresh, [], [], Index)</l>
<l>set_metrology_object_param (MetrologyHandle, Index, 'instances_outside_measure_regions', 'true')</l>
<c>* start_Y</c>
<l>add_metrology_object_line_measure (MetrologyHandle, 0, 0, 0, Width-1, 20, 5, MeasureSigma, MeasureThresh, [], [], Index)</l>
<c>* end_Y</c>
<l>add_metrology_object_line_measure (MetrologyHandle, Height-1, 0, Height-1, Width-1, 20, 5, MeasureSigma, MeasureThresh, [], [], Index)</l>
<c></c>
<c></c>
<c>* Inspect the shapes that have been added to the metrology model.</c>
<l>get_metrology_object_model_contour (ModelContour, MetrologyHandle, 'all', 1.5)</l>
<l>get_metrology_object_measures (MeasureContour, MetrologyHandle, 'all', 'all', Row, Column)</l>
<c></c>
<l>return ()</l>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
</body>
<docu id="create_metrology_from_dxf">
<abstract lang="en_US">Halcon procedure to create a metrology model from a XLD.

All the objects to be measured will be added to the Metrology Model in left to right order.

The references start_X, end_X, start_Y, end_Y are determined using the edges of the image and will be added to the last 4 positions of the Metrology Model.</abstract>
<parameters>
<parameter id="CameraParam">
<description lang="en_US">Camera intrinsic and extrinsic parameters.</description>
<mixed_type>optional</mixed_type>
<multivalue>true</multivalue>
<sem_type>number</sem_type>
</parameter>
<parameter id="DxfPath">
<default_type>string</default_type>
<description lang="en_US">DXF file path.</description>
<multivalue>false</multivalue>
<sem_type>string</sem_type>
<type_list>
<item>string</item>
</type_list>
</parameter>
<parameter id="ImageTemplate">
<description lang="en_US">Output image that represents the image that was create out of the DXF file and used as input to create the Metrology Model.</description>
<multichannel>false</multichannel>
<multivalue>false</multivalue>
<sem_type>image</sem_type>
<type_list>
<item>byte</item>
<item>uint2</item>
<item>real</item>
</type_list>
</parameter>
<parameter id="MeasureContour">
<description lang="en_US">XLD contrours that represent the ares to be measured by the metrology model.</description>
<multivalue>optional</multivalue>
<sem_type>xld</sem_type>
</parameter>
<parameter id="MeasurementPlane">
<description lang="en_US">The pose of the measurement plane.</description>
<mixed_type>optional</mixed_type>
<multivalue>true</multivalue>
<sem_type>number</sem_type>
</parameter>
<parameter id="MetrologyHandle">
<default_type>integer</default_type>
<description lang="en_US">Handle of the created metrology model.</description>
<mixed_type>false</mixed_type>
<sem_type>handle</sem_type>
<type_list>
<item>integer</item>
</type_list>
</parameter>
<parameter id="ModelContour">
<description lang="en_US">XLD contrours that were used to create the metrology model.</description>
<multivalue>optional</multivalue>
<sem_type>xld</sem_type>
</parameter>
<parameter id="Scale">
<description lang="en_US">Parameter to scale the DXF file. It must be defined to make the DXF file the same size of the image.</description>
<multivalue>false</multivalue>
<sem_type>real</sem_type>
</parameter>
</parameters>
</docu>
</procedure>
</hdevelop>
